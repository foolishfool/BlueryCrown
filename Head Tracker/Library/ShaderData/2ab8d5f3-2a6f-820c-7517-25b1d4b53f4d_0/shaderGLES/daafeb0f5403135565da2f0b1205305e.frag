#version 300 es
precision highp float;
precision highp int;

uniform vec4 u_WorldSpaceCameraPos;
uniform float u_DirLightsEnabled[3];
uniform float u_DirLightNum;
uniform vec4 u_DirLightsDirection[3];
uniform vec4 u_DirLightsColor[3];
uniform float u_DirLightsIntensity[3];
uniform float u_PointLightsEnabled[2];
uniform float u_PointLightNum;
uniform vec4 u_PointLightsPosition[2];
uniform vec4 u_PointLightsColor[2];
uniform float u_PointLightsIntensity[2];
uniform float u_PointLightsAttenRangeInv[2];
uniform float u_SpotLightsEnabled[2];
uniform float u_SpotLightNum;
uniform vec4 u_SpotLightsPosition[2];
uniform vec4 u_SpotLightsColor[2];
uniform float u_SpotLightsIntensity[2];
uniform float u_SpotLightsAttenRangeInv[2];
uniform vec4 u_SpotLightsDirection[2];
uniform float u_SpotLightsOuterAngleCos[2];
uniform float u_SpotLightsInnerAngleCos[2];
uniform float _AmbientIntensity;
uniform float _AmbientRotation;
uniform vec4 _AlbedoColor;
uniform float _Metallic;
uniform float _Roughness;
uniform mediump sampler2D _AmbientTexture;

in vec3 v_posWS;
in vec3 v_nDirWS;
layout(location = 0) out vec4 glResult;

float _6662;

void main()
{
    vec3 _2207 = vec3(pow(_AlbedoColor.x, 2.2000000476837158203125), pow(_AlbedoColor.y, 2.2000000476837158203125), pow(_AlbedoColor.z, 2.2000000476837158203125));
    vec3 _2082 = normalize(v_nDirWS);
    float _2443 = clamp(_Metallic, 0.0, 1.0);
    float _2342 = clamp(_Roughness, 0.07999999821186065673828125, 1.0);
    float _2448 = _2342 * _2342;
    float _2453 = _2448 * _2448;
    vec3 _2366 = _2207 * (0.959999978542327880859375 * (1.0 - _2443));
    vec3 _2373 = mix(vec3(0.039999999105930328369140625), _2207, vec3(_2443));
    vec3 _2408 = normalize(u_WorldSpaceCameraPos.xyz - v_posWS);
    vec3 _6495;
    if (dot(_2408, _2082) < 0.0)
    {
        _6495 = reflect(_2408, _2082);
    }
    else
    {
        _6495 = _2408;
    }
    vec3 _2434 = normalize(reflect(-_6495, _2082));
    float _2476 = max(0.0, dot(_2082, _6495));
    float _2499 = min(1.0 + dot(_2434, _2082), 1.0);
    float _2505 = clamp(pow(_2476 + 1.0, exp2((-16.0) * _2342 + (-1.0))), 0.0, 1.0) * (_2499 * _2499);
    float _2569 = u_DirLightsEnabled[0] * step(0.5, u_DirLightNum);
    vec3 _2576 = normalize(-u_DirLightsDirection[0].xyz);
    float _2588 = u_DirLightsIntensity[0] * _2569;
    float _2603 = u_DirLightsEnabled[1] * step(1.5, u_DirLightNum);
    vec3 _2610 = normalize(-u_DirLightsDirection[1].xyz);
    float _2622 = u_DirLightsIntensity[1] * _2603;
    float _2637 = u_DirLightsEnabled[2] * step(2.5, u_DirLightNum);
    vec3 _2644 = normalize(-u_DirLightsDirection[2].xyz);
    float _2656 = u_DirLightsIntensity[2] * _2637;
    float _2678 = u_PointLightsEnabled[0] * step(0.5, u_PointLightNum);
    vec3 _2686 = u_PointLightsPosition[0].xyz - v_posWS;
    float _2688 = length(_2686);
    vec3 _2692 = _2686 / vec3(_2688);
    float _2704 = u_PointLightsIntensity[0] * _2678;
    float _2710 = _2688 * u_PointLightsAttenRangeInv[0];
    float _2732 = _2710 * _2710;
    float _2739 = clamp((-_2732) * _2732 + 1.0, 0.0, 1.0);
    vec3 _2724 = vec3(((_2739 * _2739) * (_2710 * _2710 + 1.0)) * 0.25);
    float _2768 = u_PointLightsEnabled[1] * step(1.5, u_PointLightNum);
    vec3 _2776 = u_PointLightsPosition[1].xyz - v_posWS;
    float _2778 = length(_2776);
    vec3 _2782 = _2776 / vec3(_2778);
    float _2794 = u_PointLightsIntensity[1] * _2768;
    float _2800 = _2778 * u_PointLightsAttenRangeInv[1];
    float _2822 = _2800 * _2800;
    float _2829 = clamp((-_2822) * _2822 + 1.0, 0.0, 1.0);
    vec3 _2814 = vec3(((_2829 * _2829) * (_2800 * _2800 + 1.0)) * 0.25);
    float _2860 = u_SpotLightsEnabled[0] * step(0.5, u_SpotLightNum);
    vec3 _2868 = u_SpotLightsPosition[0].xyz - v_posWS;
    float _2870 = length(_2868);
    vec3 _2874 = _2868 / vec3(_2870);
    float _2886 = u_SpotLightsIntensity[0] * _2860;
    float _2892 = _2870 * u_SpotLightsAttenRangeInv[0];
    float _2935 = _2892 * _2892;
    float _2942 = clamp((-_2935) * _2935 + 1.0, 0.0, 1.0);
    vec3 _2927 = vec3((((_2942 * _2942) * (_2892 * _2892 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[0], u_SpotLightsInnerAngleCos[0], max(0.0, dot(_2874, normalize(-u_SpotLightsDirection[0].xyz)))));
    float _2973 = u_SpotLightsEnabled[1] * step(1.5, u_SpotLightNum);
    vec3 _2981 = u_SpotLightsPosition[1].xyz - v_posWS;
    float _2983 = length(_2981);
    vec3 _2987 = _2981 / vec3(_2983);
    float _2999 = u_SpotLightsIntensity[1] * _2973;
    float _3005 = _2983 * u_SpotLightsAttenRangeInv[1];
    float _3048 = _3005 * _3005;
    float _3055 = clamp((-_3048) * _3048 + 1.0, 0.0, 1.0);
    vec3 _3040 = vec3((((_3055 * _3055) * (_3005 * _3005 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[1], u_SpotLightsInnerAngleCos[1], max(0.0, dot(_2987, normalize(-u_SpotLightsDirection[1].xyz)))));
    vec3 _3327 = normalize(_2082);
    float _3330 = -_3327.z;
    float _3332 = _3327.x;
    float _3339 = acos(_3327.y);
    float _3345 = (((_3332 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3330 / length(vec2(_3332, _3330)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3354 = fract((_3345 + floor(_3345)) + 1.0);
    vec2 _6254 = vec2(_6662, _3339 * 0.3183098733425140380859375);
    _6254.x = _3354;
    float _3382 = floor(7.0);
    vec2 _6502;
    vec2 _6510;
    if (abs(_3382) < 0.001000000047497451305389404296875)
    {
        _6510 = vec2((_3354 * 0.99609375 + 0.001953125) * 0.5, (_3339 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6502 = vec2(_3354 * 0.998046875 + 0.0009765625, (_3339 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6503;
        vec2 _6511;
        if (abs(_3382 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _3435 = _3354 * 0.99609375 + 0.001953125;
            float _3445 = (_3339 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6511 = vec2(_3435 * 0.5 + 0.5, _3445);
            _6503 = vec2(_3435 * 0.5, _3445);
        }
        else
        {
            vec2 _6504;
            vec2 _6512;
            if (abs(_3382 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _3473 = _3354 * 0.99609375 + 0.001953125;
                float _3481 = _3339 * 0.315823078155517578125 + 0.00390625;
                _6512 = vec2(_3473 * 0.5, _3481 * 0.25 + 0.75);
                _6504 = vec2(_3473 * 0.5 + 0.5, _3481 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6505;
                vec2 _6513;
                if (abs(_3382 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6513 = vec2((_3354 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3339 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6505 = vec2((_3354 * 0.99609375 + 0.001953125) * 0.5, (_3339 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6506;
                    vec2 _6514;
                    if (abs(_3382 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _3549 = _3354 * 0.9921875 + 0.00390625;
                        float _3559 = (_3339 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6514 = vec2(_3549 * 0.25 + 0.75, _3559);
                        _6506 = vec2(_3549 * 0.25 + 0.5, _3559);
                    }
                    else
                    {
                        vec2 _6507;
                        vec2 _6515;
                        if (abs(_3382 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _3587 = _3354 * 0.9921875 + 0.00390625;
                            float _3595 = _3339 * 0.3133362829685211181640625 + 0.0078125;
                            _6515 = vec2(_3587 * 0.25 + 0.5, _3595 * 0.125 + 0.875);
                            _6507 = vec2(_3587 * 0.25 + 0.75, _3595 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6508;
                            vec2 _6516;
                            if (abs(_3382 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _3625 = _3354 * 0.9921875 + 0.00390625;
                                float _3635 = (_3339 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6516 = vec2(_3625 * 0.25 + 0.75, _3635);
                                _6508 = vec2(_3625 * 0.25 + 0.5, _3635);
                            }
                            else
                            {
                                vec2 _6517;
                                if (abs(_3382 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6517 = vec2((_3354 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3339 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6517 = _6254;
                                }
                                _6516 = _6517;
                                _6508 = _6517;
                            }
                            _6515 = _6516;
                            _6507 = _6508;
                        }
                        _6514 = _6515;
                        _6506 = _6507;
                    }
                    _6513 = _6514;
                    _6505 = _6506;
                }
                _6512 = _6513;
                _6504 = _6505;
            }
            _6511 = _6512;
            _6503 = _6504;
        }
        _6510 = _6511;
        _6502 = _6503;
    }
    mediump vec4 _3701 = texture(_AmbientTexture, _6502);
    mediump vec4 _3704 = texture(_AmbientTexture, _6510);
    vec4 _3707 = mix(_3701, _3704, vec4(7.0 - _3382));
    vec3 _3119 = ((((_3707.xyz / vec3(_3707.w)) * _2366) * max(vec3(1.0), ((((((_2366 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * 1.0) + ((_2366 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * 1.0) + ((_2366 * 2.755199909210205078125) + vec3(0.69029998779296875))) * 1.0)) * _AmbientIntensity) * 1.0;
    float _3770 = _2342 - 0.07999999821186065673828125;
    vec3 _3810 = normalize(mix(_2434, _2082, vec3(_2342 * _2448)));
    float _3813 = -_3810.z;
    float _3815 = _3810.x;
    float _3822 = acos(_3810.y);
    float _3828 = (((_3815 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3813 / length(vec2(_3815, _3813)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3837 = fract((_3828 + floor(_3828)) + 1.0);
    vec2 _6369 = vec2(_6662, _3822 * 0.3183098733425140380859375);
    _6369.x = _3837;
    float _3865 = floor(_3770 * 7.0);
    vec2 _6535;
    vec2 _6543;
    if (abs(_3865) < 0.001000000047497451305389404296875)
    {
        _6543 = vec2((_3837 * 0.99609375 + 0.001953125) * 0.5, (_3822 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6535 = vec2(_3837 * 0.998046875 + 0.0009765625, (_3822 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6536;
        vec2 _6544;
        if (abs(_3865 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _3918 = _3837 * 0.99609375 + 0.001953125;
            float _3928 = (_3822 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6544 = vec2(_3918 * 0.5 + 0.5, _3928);
            _6536 = vec2(_3918 * 0.5, _3928);
        }
        else
        {
            vec2 _6537;
            vec2 _6545;
            if (abs(_3865 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _3956 = _3837 * 0.99609375 + 0.001953125;
                float _3964 = _3822 * 0.315823078155517578125 + 0.00390625;
                _6545 = vec2(_3956 * 0.5, _3964 * 0.25 + 0.75);
                _6537 = vec2(_3956 * 0.5 + 0.5, _3964 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6538;
                vec2 _6546;
                if (abs(_3865 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6546 = vec2((_3837 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3822 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6538 = vec2((_3837 * 0.99609375 + 0.001953125) * 0.5, (_3822 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6539;
                    vec2 _6547;
                    if (abs(_3865 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _4032 = _3837 * 0.9921875 + 0.00390625;
                        float _4042 = (_3822 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6547 = vec2(_4032 * 0.25 + 0.75, _4042);
                        _6539 = vec2(_4032 * 0.25 + 0.5, _4042);
                    }
                    else
                    {
                        vec2 _6540;
                        vec2 _6548;
                        if (abs(_3865 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _4070 = _3837 * 0.9921875 + 0.00390625;
                            float _4078 = _3822 * 0.3133362829685211181640625 + 0.0078125;
                            _6548 = vec2(_4070 * 0.25 + 0.5, _4078 * 0.125 + 0.875);
                            _6540 = vec2(_4070 * 0.25 + 0.75, _4078 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6541;
                            vec2 _6549;
                            if (abs(_3865 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _4108 = _3837 * 0.9921875 + 0.00390625;
                                float _4118 = (_3822 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6549 = vec2(_4108 * 0.25 + 0.75, _4118);
                                _6541 = vec2(_4108 * 0.25 + 0.5, _4118);
                            }
                            else
                            {
                                vec2 _6550;
                                if (abs(_3865 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6550 = vec2((_3837 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3822 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6550 = _6369;
                                }
                                _6549 = _6550;
                                _6541 = _6550;
                            }
                            _6548 = _6549;
                            _6540 = _6541;
                        }
                        _6547 = _6548;
                        _6539 = _6540;
                    }
                    _6546 = _6547;
                    _6538 = _6539;
                }
                _6545 = _6546;
                _6537 = _6538;
            }
            _6544 = _6545;
            _6536 = _6537;
        }
        _6543 = _6544;
        _6535 = _6536;
    }
    vec4 _4190 = mix(texture(_AmbientTexture, _6535), texture(_AmbientTexture, _6543), vec4(_3770 * 7.0 + (-_3865)));
    vec4 _4215 = (vec4(-1.0, -0.0274999998509883880615234375, -0.572000026702880859375, 0.02199999988079071044921875) * _2342) + vec4(1.0, 0.0425000004470348358154296875, 1.03999996185302734375, -0.039999999105930328369140625);
    float _4217 = _4215.x;
    vec2 _4235 = (vec2(-1.03999996185302734375, 1.03999996185302734375) * (min(_4217 * _4217, exp2((-9.27999973297119140625) * _2476)) * _4217 + _4215.y)) + _4215.zw;
    vec3 _3126 = (((((_2373 * _4235.x) + vec3(_4235.y * clamp(50.0 * _2373.y, 0.0, 1.0))) * (_4190.xyz / vec3(_4190.w))) * max(vec3(_2505), ((((((_2373 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * _2505) + ((_2373 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * _2505) + ((_2373 * 2.755199909210205078125) + vec3(0.69029998779296875))) * _2505)) * _AmbientIntensity) * 1.0;
    vec3 _6578;
    vec3 _6579;
    if (_2569 > 0.5)
    {
        vec3 _4308 = normalize(_2576 + _6495);
        float _4314 = max(0.0, dot(_2082, _2576));
        float _4325 = max(0.0, dot(_6495, _4308));
        float _4341 = (-_2476) * _4314 + ((2.0 * _4325) * _4325 + (-1.0));
        float _6567;
        if (_4341 >= 0.0)
        {
            _6567 = 1.0 / max(_4314, _2476);
        }
        else
        {
            _6567 = 1.0;
        }
        float _4419 = max(0.0, dot(_2082, _4308));
        float _4477 = 1.0 - _4314;
        float _4505 = (_4419 * _2453 + (-_4419)) * _4419 + 1.0;
        float _4518 = 1.0 - _4325;
        float _4532 = _4518 * _4518;
        _6579 = _3126 + ((((((((_2373 + ((vec3(1.0) - _2373) * ((_4532 * _4532) * _4518))) * (0.5 / ((_2448 * (_2476 * _4477 + _4314) + (_2476 * (_2448 * _4477 + _4314))) + 9.9999997473787516355514526367188e-06))) * ((_2453 * 0.31830990314483642578125) / (_4505 * _4505 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4314) * u_DirLightsColor[0].xyz) * _2588) * 1.0);
        _6578 = _3119 + ((((_2366 * u_DirLightsColor[0].xyz) * _2588) * ((((((0.449999988079071044921875 * _2453) / (_2448 * _2448 + 0.0900000035762786865234375)) * _4341) * _6567 + (1.0 - ((0.5 * _2453) / (_2448 * _2448 + 0.3300000131130218505859375)))) * (_2342 * 0.5 + 1.0)) * _4314)) * 1.0);
    }
    else
    {
        _6579 = _3126;
        _6578 = _3119;
    }
    vec3 _6580;
    vec3 _6581;
    if (_2603 > 0.5)
    {
        float _4547 = max(0.0, dot(_2082, _2610));
        vec3 _4583 = normalize(_2610 + _6495);
        float _4588 = max(0.0, dot(_2082, _4583));
        float _4642 = (_4588 * _2453 + (-_4588)) * _4588 + 1.0;
        float _4655 = 1.0 - max(0.0, dot(_6495, _4583));
        float _4669 = _4655 * _4655;
        _6581 = _6579 + ((((((((_2373 + ((vec3(1.0) - _2373) * ((_4669 * _4669) * _4655))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_4642 * _4642 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4547) * u_DirLightsColor[1].xyz) * _2622) * 1.0);
        _6580 = _6578 + ((((_2366 * u_DirLightsColor[1].xyz) * _2622) * _4547) * 1.0);
    }
    else
    {
        _6581 = _6579;
        _6580 = _6578;
    }
    vec3 _6582;
    vec3 _6583;
    if (_2637 > 0.5)
    {
        float _4684 = max(0.0, dot(_2082, _2644));
        vec3 _4720 = normalize(_2644 + _6495);
        float _4725 = max(0.0, dot(_2082, _4720));
        float _4779 = (_4725 * _2453 + (-_4725)) * _4725 + 1.0;
        float _4792 = 1.0 - max(0.0, dot(_6495, _4720));
        float _4806 = _4792 * _4792;
        _6583 = _6581 + ((((((((_2373 + ((vec3(1.0) - _2373) * ((_4806 * _4806) * _4792))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_4779 * _4779 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4684) * u_DirLightsColor[2].xyz) * _2656) * 1.0);
        _6582 = _6580 + ((((_2366 * u_DirLightsColor[2].xyz) * _2656) * _4684) * 1.0);
    }
    else
    {
        _6583 = _6581;
        _6582 = _6580;
    }
    vec3 _6584;
    vec3 _6585;
    if (_2678 > 0.5)
    {
        float _4821 = max(0.0, dot(_2082, _2692));
        vec3 _4857 = normalize(_2692 + _6495);
        float _4862 = max(0.0, dot(_2082, _4857));
        float _4916 = (_4862 * _2453 + (-_4862)) * _4862 + 1.0;
        float _4929 = 1.0 - max(0.0, dot(_6495, _4857));
        float _4943 = _4929 * _4929;
        _6585 = _6583 + (((((((((_2373 + ((vec3(1.0) - _2373) * ((_4943 * _4943) * _4929))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_4916 * _4916 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4821) * u_PointLightsColor[0].xyz) * _2704) * _2724) * 1.0);
        _6584 = _6582 + (((((_2366 * u_PointLightsColor[0].xyz) * _2704) * _2724) * _4821) * 1.0);
    }
    else
    {
        _6585 = _6583;
        _6584 = _6582;
    }
    vec3 _6586;
    vec3 _6587;
    if (_2768 > 0.5)
    {
        float _4958 = max(0.0, dot(_2082, _2782));
        vec3 _4994 = normalize(_2782 + _6495);
        float _4999 = max(0.0, dot(_2082, _4994));
        float _5053 = (_4999 * _2453 + (-_4999)) * _4999 + 1.0;
        float _5066 = 1.0 - max(0.0, dot(_6495, _4994));
        float _5080 = _5066 * _5066;
        _6587 = _6585 + (((((((((_2373 + ((vec3(1.0) - _2373) * ((_5080 * _5080) * _5066))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_5053 * _5053 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4958) * u_PointLightsColor[1].xyz) * _2794) * _2814) * 1.0);
        _6586 = _6584 + (((((_2366 * u_PointLightsColor[1].xyz) * _2794) * _2814) * _4958) * 1.0);
    }
    else
    {
        _6587 = _6585;
        _6586 = _6584;
    }
    vec3 _6588;
    vec3 _6589;
    if (_2860 > 0.5)
    {
        float _5095 = max(0.0, dot(_2082, _2874));
        vec3 _5131 = normalize(_2874 + _6495);
        float _5136 = max(0.0, dot(_2082, _5131));
        float _5190 = (_5136 * _2453 + (-_5136)) * _5136 + 1.0;
        float _5203 = 1.0 - max(0.0, dot(_6495, _5131));
        float _5217 = _5203 * _5203;
        _6589 = _6587 + (((((((((_2373 + ((vec3(1.0) - _2373) * ((_5217 * _5217) * _5203))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_5190 * _5190 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5095) * u_SpotLightsColor[0].xyz) * _2886) * _2927) * 1.0);
        _6588 = _6586 + (((((_2366 * u_SpotLightsColor[0].xyz) * _2886) * _2927) * _5095) * 1.0);
    }
    else
    {
        _6589 = _6587;
        _6588 = _6586;
    }
    vec3 _6590;
    vec3 _6591;
    if (_2973 > 0.5)
    {
        float _5232 = max(0.0, dot(_2082, _2987));
        vec3 _5268 = normalize(_2987 + _6495);
        float _5273 = max(0.0, dot(_2082, _5268));
        float _5327 = (_5273 * _2453 + (-_5273)) * _5273 + 1.0;
        float _5340 = 1.0 - max(0.0, dot(_6495, _5268));
        float _5354 = _5340 * _5340;
        _6591 = _6589 + (((((((((_2373 + ((vec3(1.0) - _2373) * ((_5354 * _5354) * _5340))) * 0.25) * ((_2453 * 0.31830990314483642578125) / (_5327 * _5327 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5232) * u_SpotLightsColor[1].xyz) * _2999) * _3040) * 1.0);
        _6590 = _6588 + (((((_2366 * u_SpotLightsColor[1].xyz) * _2999) * _3040) * _5232) * 1.0);
    }
    else
    {
        _6591 = _6589;
        _6590 = _6588;
    }
    vec3 _3278 = _6590 + _6591;
    glResult = vec4(pow(_3278.x, 0.4545449912548065185546875), pow(_3278.y, 0.4545449912548065185546875), pow(_3278.z, 0.4545449912548065185546875), _AlbedoColor.w);
}

