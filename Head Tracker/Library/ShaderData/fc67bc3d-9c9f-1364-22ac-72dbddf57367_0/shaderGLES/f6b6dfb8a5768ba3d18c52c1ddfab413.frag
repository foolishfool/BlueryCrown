#version 300 es
precision highp float;
precision highp int;

uniform vec4 u_WorldSpaceCameraPos;
uniform float u_DirLightsEnabled[3];
uniform float u_DirLightNum;
uniform vec4 u_DirLightsDirection[3];
uniform vec4 u_DirLightsColor[3];
uniform float u_DirLightsIntensity[3];
uniform float u_PointLightsEnabled[2];
uniform float u_PointLightNum;
uniform vec4 u_PointLightsPosition[2];
uniform vec4 u_PointLightsColor[2];
uniform float u_PointLightsIntensity[2];
uniform float u_PointLightsAttenRangeInv[2];
uniform float u_SpotLightsEnabled[2];
uniform float u_SpotLightNum;
uniform vec4 u_SpotLightsPosition[2];
uniform vec4 u_SpotLightsColor[2];
uniform float u_SpotLightsIntensity[2];
uniform float u_SpotLightsAttenRangeInv[2];
uniform vec4 u_SpotLightsDirection[2];
uniform float u_SpotLightsOuterAngleCos[2];
uniform float u_SpotLightsInnerAngleCos[2];
uniform float _AmbientIntensity;
uniform float _AmbientRotation;
uniform vec4 _AlbedoColor;
uniform mediump sampler2D _AlbedoTexture;
uniform mediump sampler2D _MRAOTexture;
uniform float _Metallic;
uniform float _Roughness;
uniform float _Occlusion;
uniform mediump sampler2D _AmbientTexture;

in vec3 v_posWS;
in vec3 v_nDirWS;
in vec2 v_uv0;
layout(location = 0) out vec4 glResult;

float _6756;

void main()
{
    mediump vec4 _2095 = texture(_AlbedoTexture, v_uv0);
    vec3 _2101 = vec3(pow(_AlbedoColor.x, 2.2000000476837158203125), pow(_AlbedoColor.y, 2.2000000476837158203125), pow(_AlbedoColor.z, 2.2000000476837158203125)) * vec3(pow(_2095.x, 2.2000000476837158203125), pow(_2095.y, 2.2000000476837158203125), pow(_2095.z, 2.2000000476837158203125));
    mediump vec4 _2113 = texture(_MRAOTexture, v_uv0);
    vec3 _2142 = normalize(v_nDirWS);
    float _2530 = clamp((_2113.x + _Metallic) - 0.5, 0.0, 1.0);
    float _2429 = clamp((_2113.y + _Roughness) - 0.5, 0.07999999821186065673828125, 1.0);
    float _2535 = _2429 * _2429;
    float _2540 = _2535 * _2535;
    float _2544 = clamp(mix(1.0, _2113.z, _Occlusion), 0.0, 1.0);
    vec3 _2453 = _2101 * (0.959999978542327880859375 * (1.0 - _2530));
    vec3 _2460 = mix(vec3(0.039999999105930328369140625), _2101, vec3(_2530));
    vec3 _2495 = normalize(u_WorldSpaceCameraPos.xyz - v_posWS);
    vec3 _6589;
    if (dot(_2495, _2142) < 0.0)
    {
        _6589 = reflect(_2495, _2142);
    }
    else
    {
        _6589 = _2495;
    }
    vec3 _2521 = normalize(reflect(-_6589, _2142));
    float _2563 = max(0.0, dot(_2142, _6589));
    float _2586 = min(1.0 + dot(_2521, _2142), 1.0);
    float _2592 = clamp((pow(_2563 + _2544, exp2((-16.0) * _2429 + (-1.0))) - 1.0) + _2544, 0.0, 1.0) * (_2586 * _2586);
    float _2656 = u_DirLightsEnabled[0] * step(0.5, u_DirLightNum);
    vec3 _2663 = normalize(-u_DirLightsDirection[0].xyz);
    float _2675 = u_DirLightsIntensity[0] * _2656;
    float _2690 = u_DirLightsEnabled[1] * step(1.5, u_DirLightNum);
    vec3 _2697 = normalize(-u_DirLightsDirection[1].xyz);
    float _2709 = u_DirLightsIntensity[1] * _2690;
    float _2724 = u_DirLightsEnabled[2] * step(2.5, u_DirLightNum);
    vec3 _2731 = normalize(-u_DirLightsDirection[2].xyz);
    float _2743 = u_DirLightsIntensity[2] * _2724;
    float _2765 = u_PointLightsEnabled[0] * step(0.5, u_PointLightNum);
    vec3 _2773 = u_PointLightsPosition[0].xyz - v_posWS;
    float _2775 = length(_2773);
    vec3 _2779 = _2773 / vec3(_2775);
    float _2791 = u_PointLightsIntensity[0] * _2765;
    float _2797 = _2775 * u_PointLightsAttenRangeInv[0];
    float _2819 = _2797 * _2797;
    float _2826 = clamp((-_2819) * _2819 + 1.0, 0.0, 1.0);
    vec3 _2811 = vec3(((_2826 * _2826) * (_2797 * _2797 + 1.0)) * 0.25);
    float _2855 = u_PointLightsEnabled[1] * step(1.5, u_PointLightNum);
    vec3 _2863 = u_PointLightsPosition[1].xyz - v_posWS;
    float _2865 = length(_2863);
    vec3 _2869 = _2863 / vec3(_2865);
    float _2881 = u_PointLightsIntensity[1] * _2855;
    float _2887 = _2865 * u_PointLightsAttenRangeInv[1];
    float _2909 = _2887 * _2887;
    float _2916 = clamp((-_2909) * _2909 + 1.0, 0.0, 1.0);
    vec3 _2901 = vec3(((_2916 * _2916) * (_2887 * _2887 + 1.0)) * 0.25);
    float _2947 = u_SpotLightsEnabled[0] * step(0.5, u_SpotLightNum);
    vec3 _2955 = u_SpotLightsPosition[0].xyz - v_posWS;
    float _2957 = length(_2955);
    vec3 _2961 = _2955 / vec3(_2957);
    float _2973 = u_SpotLightsIntensity[0] * _2947;
    float _2979 = _2957 * u_SpotLightsAttenRangeInv[0];
    float _3022 = _2979 * _2979;
    float _3029 = clamp((-_3022) * _3022 + 1.0, 0.0, 1.0);
    vec3 _3014 = vec3((((_3029 * _3029) * (_2979 * _2979 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[0], u_SpotLightsInnerAngleCos[0], max(0.0, dot(_2961, normalize(-u_SpotLightsDirection[0].xyz)))));
    float _3060 = u_SpotLightsEnabled[1] * step(1.5, u_SpotLightNum);
    vec3 _3068 = u_SpotLightsPosition[1].xyz - v_posWS;
    float _3070 = length(_3068);
    vec3 _3074 = _3068 / vec3(_3070);
    float _3086 = u_SpotLightsIntensity[1] * _3060;
    float _3092 = _3070 * u_SpotLightsAttenRangeInv[1];
    float _3135 = _3092 * _3092;
    float _3142 = clamp((-_3135) * _3135 + 1.0, 0.0, 1.0);
    vec3 _3127 = vec3((((_3142 * _3142) * (_3092 * _3092 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[1], u_SpotLightsInnerAngleCos[1], max(0.0, dot(_3074, normalize(-u_SpotLightsDirection[1].xyz)))));
    vec3 _3414 = normalize(_2142);
    float _3417 = -_3414.z;
    float _3419 = _3414.x;
    float _3426 = acos(_3414.y);
    float _3432 = (((_3419 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3417 / length(vec2(_3419, _3417)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3441 = fract((_3432 + floor(_3432)) + 1.0);
    vec2 _6348 = vec2(_6756, _3426 * 0.3183098733425140380859375);
    _6348.x = _3441;
    float _3469 = floor(7.0);
    vec2 _6596;
    vec2 _6604;
    if (abs(_3469) < 0.001000000047497451305389404296875)
    {
        _6604 = vec2((_3441 * 0.99609375 + 0.001953125) * 0.5, (_3426 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6596 = vec2(_3441 * 0.998046875 + 0.0009765625, (_3426 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6597;
        vec2 _6605;
        if (abs(_3469 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _3522 = _3441 * 0.99609375 + 0.001953125;
            float _3532 = (_3426 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6605 = vec2(_3522 * 0.5 + 0.5, _3532);
            _6597 = vec2(_3522 * 0.5, _3532);
        }
        else
        {
            vec2 _6598;
            vec2 _6606;
            if (abs(_3469 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _3560 = _3441 * 0.99609375 + 0.001953125;
                float _3568 = _3426 * 0.315823078155517578125 + 0.00390625;
                _6606 = vec2(_3560 * 0.5, _3568 * 0.25 + 0.75);
                _6598 = vec2(_3560 * 0.5 + 0.5, _3568 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6599;
                vec2 _6607;
                if (abs(_3469 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6607 = vec2((_3441 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3426 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6599 = vec2((_3441 * 0.99609375 + 0.001953125) * 0.5, (_3426 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6600;
                    vec2 _6608;
                    if (abs(_3469 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _3636 = _3441 * 0.9921875 + 0.00390625;
                        float _3646 = (_3426 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6608 = vec2(_3636 * 0.25 + 0.75, _3646);
                        _6600 = vec2(_3636 * 0.25 + 0.5, _3646);
                    }
                    else
                    {
                        vec2 _6601;
                        vec2 _6609;
                        if (abs(_3469 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _3674 = _3441 * 0.9921875 + 0.00390625;
                            float _3682 = _3426 * 0.3133362829685211181640625 + 0.0078125;
                            _6609 = vec2(_3674 * 0.25 + 0.5, _3682 * 0.125 + 0.875);
                            _6601 = vec2(_3674 * 0.25 + 0.75, _3682 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6602;
                            vec2 _6610;
                            if (abs(_3469 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _3712 = _3441 * 0.9921875 + 0.00390625;
                                float _3722 = (_3426 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6610 = vec2(_3712 * 0.25 + 0.75, _3722);
                                _6602 = vec2(_3712 * 0.25 + 0.5, _3722);
                            }
                            else
                            {
                                vec2 _6611;
                                if (abs(_3469 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6611 = vec2((_3441 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3426 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6611 = _6348;
                                }
                                _6610 = _6611;
                                _6602 = _6611;
                            }
                            _6609 = _6610;
                            _6601 = _6602;
                        }
                        _6608 = _6609;
                        _6600 = _6601;
                    }
                    _6607 = _6608;
                    _6599 = _6600;
                }
                _6606 = _6607;
                _6598 = _6599;
            }
            _6605 = _6606;
            _6597 = _6598;
        }
        _6604 = _6605;
        _6596 = _6597;
    }
    mediump vec4 _3788 = texture(_AmbientTexture, _6596);
    mediump vec4 _3791 = texture(_AmbientTexture, _6604);
    vec4 _3794 = mix(_3788, _3791, vec4(7.0 - _3469));
    vec3 _3206 = ((((_3794.xyz / vec3(_3794.w)) * _2453) * max(vec3(_2544), ((((((_2453 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * _2544) + ((_2453 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * _2544) + ((_2453 * 2.755199909210205078125) + vec3(0.69029998779296875))) * _2544)) * _AmbientIntensity) * 1.0;
    float _3857 = _2429 - 0.07999999821186065673828125;
    vec3 _3897 = normalize(mix(_2521, _2142, vec3(_2429 * _2535)));
    float _3900 = -_3897.z;
    float _3902 = _3897.x;
    float _3909 = acos(_3897.y);
    float _3915 = (((_3902 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3900 / length(vec2(_3902, _3900)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3924 = fract((_3915 + floor(_3915)) + 1.0);
    vec2 _6463 = vec2(_6756, _3909 * 0.3183098733425140380859375);
    _6463.x = _3924;
    float _3952 = floor(_3857 * 7.0);
    vec2 _6629;
    vec2 _6637;
    if (abs(_3952) < 0.001000000047497451305389404296875)
    {
        _6637 = vec2((_3924 * 0.99609375 + 0.001953125) * 0.5, (_3909 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6629 = vec2(_3924 * 0.998046875 + 0.0009765625, (_3909 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6630;
        vec2 _6638;
        if (abs(_3952 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _4005 = _3924 * 0.99609375 + 0.001953125;
            float _4015 = (_3909 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6638 = vec2(_4005 * 0.5 + 0.5, _4015);
            _6630 = vec2(_4005 * 0.5, _4015);
        }
        else
        {
            vec2 _6631;
            vec2 _6639;
            if (abs(_3952 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _4043 = _3924 * 0.99609375 + 0.001953125;
                float _4051 = _3909 * 0.315823078155517578125 + 0.00390625;
                _6639 = vec2(_4043 * 0.5, _4051 * 0.25 + 0.75);
                _6631 = vec2(_4043 * 0.5 + 0.5, _4051 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6632;
                vec2 _6640;
                if (abs(_3952 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6640 = vec2((_3924 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3909 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6632 = vec2((_3924 * 0.99609375 + 0.001953125) * 0.5, (_3909 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6633;
                    vec2 _6641;
                    if (abs(_3952 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _4119 = _3924 * 0.9921875 + 0.00390625;
                        float _4129 = (_3909 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6641 = vec2(_4119 * 0.25 + 0.75, _4129);
                        _6633 = vec2(_4119 * 0.25 + 0.5, _4129);
                    }
                    else
                    {
                        vec2 _6634;
                        vec2 _6642;
                        if (abs(_3952 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _4157 = _3924 * 0.9921875 + 0.00390625;
                            float _4165 = _3909 * 0.3133362829685211181640625 + 0.0078125;
                            _6642 = vec2(_4157 * 0.25 + 0.5, _4165 * 0.125 + 0.875);
                            _6634 = vec2(_4157 * 0.25 + 0.75, _4165 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6635;
                            vec2 _6643;
                            if (abs(_3952 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _4195 = _3924 * 0.9921875 + 0.00390625;
                                float _4205 = (_3909 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6643 = vec2(_4195 * 0.25 + 0.75, _4205);
                                _6635 = vec2(_4195 * 0.25 + 0.5, _4205);
                            }
                            else
                            {
                                vec2 _6644;
                                if (abs(_3952 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6644 = vec2((_3924 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3909 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6644 = _6463;
                                }
                                _6643 = _6644;
                                _6635 = _6644;
                            }
                            _6642 = _6643;
                            _6634 = _6635;
                        }
                        _6641 = _6642;
                        _6633 = _6634;
                    }
                    _6640 = _6641;
                    _6632 = _6633;
                }
                _6639 = _6640;
                _6631 = _6632;
            }
            _6638 = _6639;
            _6630 = _6631;
        }
        _6637 = _6638;
        _6629 = _6630;
    }
    vec4 _4277 = mix(texture(_AmbientTexture, _6629), texture(_AmbientTexture, _6637), vec4(_3857 * 7.0 + (-_3952)));
    vec4 _4302 = (vec4(-1.0, -0.0274999998509883880615234375, -0.572000026702880859375, 0.02199999988079071044921875) * _2429) + vec4(1.0, 0.0425000004470348358154296875, 1.03999996185302734375, -0.039999999105930328369140625);
    float _4304 = _4302.x;
    vec2 _4322 = (vec2(-1.03999996185302734375, 1.03999996185302734375) * (min(_4304 * _4304, exp2((-9.27999973297119140625) * _2563)) * _4304 + _4302.y)) + _4302.zw;
    vec3 _3213 = (((((_2460 * _4322.x) + vec3(_4322.y * clamp(50.0 * _2460.y, 0.0, 1.0))) * (_4277.xyz / vec3(_4277.w))) * max(vec3(_2592), ((((((_2460 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * _2592) + ((_2460 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * _2592) + ((_2460 * 2.755199909210205078125) + vec3(0.69029998779296875))) * _2592)) * _AmbientIntensity) * 1.0;
    vec3 _6672;
    vec3 _6673;
    if (_2656 > 0.5)
    {
        vec3 _4395 = normalize(_2663 + _6589);
        float _4401 = max(0.0, dot(_2142, _2663));
        float _4412 = max(0.0, dot(_6589, _4395));
        float _4428 = (-_2563) * _4401 + ((2.0 * _4412) * _4412 + (-1.0));
        float _6661;
        if (_4428 >= 0.0)
        {
            _6661 = 1.0 / max(_4401, _2563);
        }
        else
        {
            _6661 = 1.0;
        }
        float _4506 = max(0.0, dot(_2142, _4395));
        float _4564 = 1.0 - _4401;
        float _4592 = (_4506 * _2540 + (-_4506)) * _4506 + 1.0;
        float _4605 = 1.0 - _4412;
        float _4619 = _4605 * _4605;
        _6673 = _3213 + ((((((((_2460 + ((vec3(1.0) - _2460) * ((_4619 * _4619) * _4605))) * (0.5 / ((_2535 * (_2563 * _4564 + _4401) + (_2563 * (_2535 * _4564 + _4401))) + 9.9999997473787516355514526367188e-06))) * ((_2540 * 0.31830990314483642578125) / (_4592 * _4592 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4401) * u_DirLightsColor[0].xyz) * _2675) * 1.0);
        _6672 = _3206 + ((((_2453 * u_DirLightsColor[0].xyz) * _2675) * ((((((0.449999988079071044921875 * _2540) / (_2535 * _2535 + 0.0900000035762786865234375)) * _4428) * _6661 + (1.0 - ((0.5 * _2540) / (_2535 * _2535 + 0.3300000131130218505859375)))) * (_2429 * 0.5 + 1.0)) * _4401)) * 1.0);
    }
    else
    {
        _6673 = _3213;
        _6672 = _3206;
    }
    vec3 _6674;
    vec3 _6675;
    if (_2690 > 0.5)
    {
        float _4634 = max(0.0, dot(_2142, _2697));
        vec3 _4670 = normalize(_2697 + _6589);
        float _4675 = max(0.0, dot(_2142, _4670));
        float _4729 = (_4675 * _2540 + (-_4675)) * _4675 + 1.0;
        float _4742 = 1.0 - max(0.0, dot(_6589, _4670));
        float _4756 = _4742 * _4742;
        _6675 = _6673 + ((((((((_2460 + ((vec3(1.0) - _2460) * ((_4756 * _4756) * _4742))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_4729 * _4729 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4634) * u_DirLightsColor[1].xyz) * _2709) * 1.0);
        _6674 = _6672 + ((((_2453 * u_DirLightsColor[1].xyz) * _2709) * _4634) * 1.0);
    }
    else
    {
        _6675 = _6673;
        _6674 = _6672;
    }
    vec3 _6676;
    vec3 _6677;
    if (_2724 > 0.5)
    {
        float _4771 = max(0.0, dot(_2142, _2731));
        vec3 _4807 = normalize(_2731 + _6589);
        float _4812 = max(0.0, dot(_2142, _4807));
        float _4866 = (_4812 * _2540 + (-_4812)) * _4812 + 1.0;
        float _4879 = 1.0 - max(0.0, dot(_6589, _4807));
        float _4893 = _4879 * _4879;
        _6677 = _6675 + ((((((((_2460 + ((vec3(1.0) - _2460) * ((_4893 * _4893) * _4879))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_4866 * _4866 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4771) * u_DirLightsColor[2].xyz) * _2743) * 1.0);
        _6676 = _6674 + ((((_2453 * u_DirLightsColor[2].xyz) * _2743) * _4771) * 1.0);
    }
    else
    {
        _6677 = _6675;
        _6676 = _6674;
    }
    vec3 _6678;
    vec3 _6679;
    if (_2765 > 0.5)
    {
        float _4908 = max(0.0, dot(_2142, _2779));
        vec3 _4944 = normalize(_2779 + _6589);
        float _4949 = max(0.0, dot(_2142, _4944));
        float _5003 = (_4949 * _2540 + (-_4949)) * _4949 + 1.0;
        float _5016 = 1.0 - max(0.0, dot(_6589, _4944));
        float _5030 = _5016 * _5016;
        _6679 = _6677 + (((((((((_2460 + ((vec3(1.0) - _2460) * ((_5030 * _5030) * _5016))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_5003 * _5003 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4908) * u_PointLightsColor[0].xyz) * _2791) * _2811) * 1.0);
        _6678 = _6676 + (((((_2453 * u_PointLightsColor[0].xyz) * _2791) * _2811) * _4908) * 1.0);
    }
    else
    {
        _6679 = _6677;
        _6678 = _6676;
    }
    vec3 _6680;
    vec3 _6681;
    if (_2855 > 0.5)
    {
        float _5045 = max(0.0, dot(_2142, _2869));
        vec3 _5081 = normalize(_2869 + _6589);
        float _5086 = max(0.0, dot(_2142, _5081));
        float _5140 = (_5086 * _2540 + (-_5086)) * _5086 + 1.0;
        float _5153 = 1.0 - max(0.0, dot(_6589, _5081));
        float _5167 = _5153 * _5153;
        _6681 = _6679 + (((((((((_2460 + ((vec3(1.0) - _2460) * ((_5167 * _5167) * _5153))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_5140 * _5140 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5045) * u_PointLightsColor[1].xyz) * _2881) * _2901) * 1.0);
        _6680 = _6678 + (((((_2453 * u_PointLightsColor[1].xyz) * _2881) * _2901) * _5045) * 1.0);
    }
    else
    {
        _6681 = _6679;
        _6680 = _6678;
    }
    vec3 _6682;
    vec3 _6683;
    if (_2947 > 0.5)
    {
        float _5182 = max(0.0, dot(_2142, _2961));
        vec3 _5218 = normalize(_2961 + _6589);
        float _5223 = max(0.0, dot(_2142, _5218));
        float _5277 = (_5223 * _2540 + (-_5223)) * _5223 + 1.0;
        float _5290 = 1.0 - max(0.0, dot(_6589, _5218));
        float _5304 = _5290 * _5290;
        _6683 = _6681 + (((((((((_2460 + ((vec3(1.0) - _2460) * ((_5304 * _5304) * _5290))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_5277 * _5277 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5182) * u_SpotLightsColor[0].xyz) * _2973) * _3014) * 1.0);
        _6682 = _6680 + (((((_2453 * u_SpotLightsColor[0].xyz) * _2973) * _3014) * _5182) * 1.0);
    }
    else
    {
        _6683 = _6681;
        _6682 = _6680;
    }
    vec3 _6684;
    vec3 _6685;
    if (_3060 > 0.5)
    {
        float _5319 = max(0.0, dot(_2142, _3074));
        vec3 _5355 = normalize(_3074 + _6589);
        float _5360 = max(0.0, dot(_2142, _5355));
        float _5414 = (_5360 * _2540 + (-_5360)) * _5360 + 1.0;
        float _5427 = 1.0 - max(0.0, dot(_6589, _5355));
        float _5441 = _5427 * _5427;
        _6685 = _6683 + (((((((((_2460 + ((vec3(1.0) - _2460) * ((_5441 * _5441) * _5427))) * 0.25) * ((_2540 * 0.31830990314483642578125) / (_5414 * _5414 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5319) * u_SpotLightsColor[1].xyz) * _3086) * _3127) * 1.0);
        _6684 = _6682 + (((((_2453 * u_SpotLightsColor[1].xyz) * _3086) * _3127) * _5319) * 1.0);
    }
    else
    {
        _6685 = _6683;
        _6684 = _6682;
    }
    vec3 _3365 = _6684 + _6685;
    glResult = vec4(pow(_3365.x, 0.4545449912548065185546875), pow(_3365.y, 0.4545449912548065185546875), pow(_3365.z, 0.4545449912548065185546875), _AlbedoColor.w * _2095.w);
}

