#version 300 es
precision highp float;
precision highp int;

uniform vec4 u_WorldSpaceCameraPos;
uniform float u_DirLightsEnabled[3];
uniform float u_DirLightNum;
uniform vec4 u_DirLightsDirection[3];
uniform vec4 u_DirLightsColor[3];
uniform float u_DirLightsIntensity[3];
uniform float u_PointLightsEnabled[2];
uniform float u_PointLightNum;
uniform vec4 u_PointLightsPosition[2];
uniform vec4 u_PointLightsColor[2];
uniform float u_PointLightsIntensity[2];
uniform float u_PointLightsAttenRangeInv[2];
uniform float u_SpotLightsEnabled[2];
uniform float u_SpotLightNum;
uniform vec4 u_SpotLightsPosition[2];
uniform vec4 u_SpotLightsColor[2];
uniform float u_SpotLightsIntensity[2];
uniform float u_SpotLightsAttenRangeInv[2];
uniform vec4 u_SpotLightsDirection[2];
uniform float u_SpotLightsOuterAngleCos[2];
uniform float u_SpotLightsInnerAngleCos[2];
uniform float _AmbientIntensity;
uniform float _AmbientRotation;
uniform vec4 _AlbedoColor;
uniform mediump sampler2D _AlbedoTexture;
uniform float _Metallic;
uniform float _Roughness;
uniform mediump sampler2D _AmbientTexture;

in vec3 v_posWS;
in vec3 v_nDirWS;
in vec2 v_uv0;
layout(location = 0) out vec4 glResult;

float _6695;

void main()
{
    mediump vec4 _2076 = texture(_AlbedoTexture, v_uv0);
    vec3 _2082 = vec3(pow(_AlbedoColor.x, 2.2000000476837158203125), pow(_AlbedoColor.y, 2.2000000476837158203125), pow(_AlbedoColor.z, 2.2000000476837158203125)) * vec3(pow(_2076.x, 2.2000000476837158203125), pow(_2076.y, 2.2000000476837158203125), pow(_2076.z, 2.2000000476837158203125));
    vec3 _2100 = normalize(v_nDirWS);
    float _2472 = clamp(_Metallic, 0.0, 1.0);
    float _2371 = clamp(_Roughness, 0.07999999821186065673828125, 1.0);
    float _2477 = _2371 * _2371;
    float _2482 = _2477 * _2477;
    vec3 _2395 = _2082 * (0.959999978542327880859375 * (1.0 - _2472));
    vec3 _2402 = mix(vec3(0.039999999105930328369140625), _2082, vec3(_2472));
    vec3 _2437 = normalize(u_WorldSpaceCameraPos.xyz - v_posWS);
    vec3 _6528;
    if (dot(_2437, _2100) < 0.0)
    {
        _6528 = reflect(_2437, _2100);
    }
    else
    {
        _6528 = _2437;
    }
    vec3 _2463 = normalize(reflect(-_6528, _2100));
    float _2505 = max(0.0, dot(_2100, _6528));
    float _2528 = min(1.0 + dot(_2463, _2100), 1.0);
    float _2534 = clamp(pow(_2505 + 1.0, exp2((-16.0) * _2371 + (-1.0))), 0.0, 1.0) * (_2528 * _2528);
    float _2598 = u_DirLightsEnabled[0] * step(0.5, u_DirLightNum);
    vec3 _2605 = normalize(-u_DirLightsDirection[0].xyz);
    float _2617 = u_DirLightsIntensity[0] * _2598;
    float _2632 = u_DirLightsEnabled[1] * step(1.5, u_DirLightNum);
    vec3 _2639 = normalize(-u_DirLightsDirection[1].xyz);
    float _2651 = u_DirLightsIntensity[1] * _2632;
    float _2666 = u_DirLightsEnabled[2] * step(2.5, u_DirLightNum);
    vec3 _2673 = normalize(-u_DirLightsDirection[2].xyz);
    float _2685 = u_DirLightsIntensity[2] * _2666;
    float _2707 = u_PointLightsEnabled[0] * step(0.5, u_PointLightNum);
    vec3 _2715 = u_PointLightsPosition[0].xyz - v_posWS;
    float _2717 = length(_2715);
    vec3 _2721 = _2715 / vec3(_2717);
    float _2733 = u_PointLightsIntensity[0] * _2707;
    float _2739 = _2717 * u_PointLightsAttenRangeInv[0];
    float _2761 = _2739 * _2739;
    float _2768 = clamp((-_2761) * _2761 + 1.0, 0.0, 1.0);
    vec3 _2753 = vec3(((_2768 * _2768) * (_2739 * _2739 + 1.0)) * 0.25);
    float _2797 = u_PointLightsEnabled[1] * step(1.5, u_PointLightNum);
    vec3 _2805 = u_PointLightsPosition[1].xyz - v_posWS;
    float _2807 = length(_2805);
    vec3 _2811 = _2805 / vec3(_2807);
    float _2823 = u_PointLightsIntensity[1] * _2797;
    float _2829 = _2807 * u_PointLightsAttenRangeInv[1];
    float _2851 = _2829 * _2829;
    float _2858 = clamp((-_2851) * _2851 + 1.0, 0.0, 1.0);
    vec3 _2843 = vec3(((_2858 * _2858) * (_2829 * _2829 + 1.0)) * 0.25);
    float _2889 = u_SpotLightsEnabled[0] * step(0.5, u_SpotLightNum);
    vec3 _2897 = u_SpotLightsPosition[0].xyz - v_posWS;
    float _2899 = length(_2897);
    vec3 _2903 = _2897 / vec3(_2899);
    float _2915 = u_SpotLightsIntensity[0] * _2889;
    float _2921 = _2899 * u_SpotLightsAttenRangeInv[0];
    float _2964 = _2921 * _2921;
    float _2971 = clamp((-_2964) * _2964 + 1.0, 0.0, 1.0);
    vec3 _2956 = vec3((((_2971 * _2971) * (_2921 * _2921 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[0], u_SpotLightsInnerAngleCos[0], max(0.0, dot(_2903, normalize(-u_SpotLightsDirection[0].xyz)))));
    float _3002 = u_SpotLightsEnabled[1] * step(1.5, u_SpotLightNum);
    vec3 _3010 = u_SpotLightsPosition[1].xyz - v_posWS;
    float _3012 = length(_3010);
    vec3 _3016 = _3010 / vec3(_3012);
    float _3028 = u_SpotLightsIntensity[1] * _3002;
    float _3034 = _3012 * u_SpotLightsAttenRangeInv[1];
    float _3077 = _3034 * _3034;
    float _3084 = clamp((-_3077) * _3077 + 1.0, 0.0, 1.0);
    vec3 _3069 = vec3((((_3084 * _3084) * (_3034 * _3034 + 1.0)) * 0.25) * smoothstep(u_SpotLightsOuterAngleCos[1], u_SpotLightsInnerAngleCos[1], max(0.0, dot(_3016, normalize(-u_SpotLightsDirection[1].xyz)))));
    vec3 _3356 = normalize(_2100);
    float _3359 = -_3356.z;
    float _3361 = _3356.x;
    float _3368 = acos(_3356.y);
    float _3374 = (((_3361 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3359 / length(vec2(_3361, _3359)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3383 = fract((_3374 + floor(_3374)) + 1.0);
    vec2 _6287 = vec2(_6695, _3368 * 0.3183098733425140380859375);
    _6287.x = _3383;
    float _3411 = floor(7.0);
    vec2 _6535;
    vec2 _6543;
    if (abs(_3411) < 0.001000000047497451305389404296875)
    {
        _6543 = vec2((_3383 * 0.99609375 + 0.001953125) * 0.5, (_3368 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6535 = vec2(_3383 * 0.998046875 + 0.0009765625, (_3368 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6536;
        vec2 _6544;
        if (abs(_3411 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _3464 = _3383 * 0.99609375 + 0.001953125;
            float _3474 = (_3368 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6544 = vec2(_3464 * 0.5 + 0.5, _3474);
            _6536 = vec2(_3464 * 0.5, _3474);
        }
        else
        {
            vec2 _6537;
            vec2 _6545;
            if (abs(_3411 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _3502 = _3383 * 0.99609375 + 0.001953125;
                float _3510 = _3368 * 0.315823078155517578125 + 0.00390625;
                _6545 = vec2(_3502 * 0.5, _3510 * 0.25 + 0.75);
                _6537 = vec2(_3502 * 0.5 + 0.5, _3510 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6538;
                vec2 _6546;
                if (abs(_3411 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6546 = vec2((_3383 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3368 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6538 = vec2((_3383 * 0.99609375 + 0.001953125) * 0.5, (_3368 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6539;
                    vec2 _6547;
                    if (abs(_3411 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _3578 = _3383 * 0.9921875 + 0.00390625;
                        float _3588 = (_3368 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6547 = vec2(_3578 * 0.25 + 0.75, _3588);
                        _6539 = vec2(_3578 * 0.25 + 0.5, _3588);
                    }
                    else
                    {
                        vec2 _6540;
                        vec2 _6548;
                        if (abs(_3411 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _3616 = _3383 * 0.9921875 + 0.00390625;
                            float _3624 = _3368 * 0.3133362829685211181640625 + 0.0078125;
                            _6548 = vec2(_3616 * 0.25 + 0.5, _3624 * 0.125 + 0.875);
                            _6540 = vec2(_3616 * 0.25 + 0.75, _3624 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6541;
                            vec2 _6549;
                            if (abs(_3411 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _3654 = _3383 * 0.9921875 + 0.00390625;
                                float _3664 = (_3368 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6549 = vec2(_3654 * 0.25 + 0.75, _3664);
                                _6541 = vec2(_3654 * 0.25 + 0.5, _3664);
                            }
                            else
                            {
                                vec2 _6550;
                                if (abs(_3411 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6550 = vec2((_3383 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3368 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6550 = _6287;
                                }
                                _6549 = _6550;
                                _6541 = _6550;
                            }
                            _6548 = _6549;
                            _6540 = _6541;
                        }
                        _6547 = _6548;
                        _6539 = _6540;
                    }
                    _6546 = _6547;
                    _6538 = _6539;
                }
                _6545 = _6546;
                _6537 = _6538;
            }
            _6544 = _6545;
            _6536 = _6537;
        }
        _6543 = _6544;
        _6535 = _6536;
    }
    mediump vec4 _3730 = texture(_AmbientTexture, _6535);
    mediump vec4 _3733 = texture(_AmbientTexture, _6543);
    vec4 _3736 = mix(_3730, _3733, vec4(7.0 - _3411));
    vec3 _3148 = ((((_3736.xyz / vec3(_3736.w)) * _2395) * max(vec3(1.0), ((((((_2395 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * 1.0) + ((_2395 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * 1.0) + ((_2395 * 2.755199909210205078125) + vec3(0.69029998779296875))) * 1.0)) * _AmbientIntensity) * 1.0;
    float _3799 = _2371 - 0.07999999821186065673828125;
    vec3 _3839 = normalize(mix(_2463, _2100, vec3(_2371 * _2477)));
    float _3842 = -_3839.z;
    float _3844 = _3839.x;
    float _3851 = acos(_3839.y);
    float _3857 = (((_3844 < 0.0) ? (-1.0) : 1.0) * acos(clamp(_3842 / length(vec2(_3844, _3842)), -1.0, 1.0)) + (-1.57079637050628662109375)) * 0.15915493667125701904296875 + _AmbientRotation;
    float _3866 = fract((_3857 + floor(_3857)) + 1.0);
    vec2 _6402 = vec2(_6695, _3851 * 0.3183098733425140380859375);
    _6402.x = _3866;
    float _3894 = floor(_3799 * 7.0);
    vec2 _6568;
    vec2 _6576;
    if (abs(_3894) < 0.001000000047497451305389404296875)
    {
        _6576 = vec2((_3866 * 0.99609375 + 0.001953125) * 0.5, (_3851 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5);
        _6568 = vec2(_3866 * 0.998046875 + 0.0009765625, (_3851 * 0.3170664608478546142578125 + 0.001953125) * 0.5);
    }
    else
    {
        vec2 _6569;
        vec2 _6577;
        if (abs(_3894 - 1.0) < 0.001000000047497451305389404296875)
        {
            float _3947 = _3866 * 0.99609375 + 0.001953125;
            float _3957 = (_3851 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.5;
            _6577 = vec2(_3947 * 0.5 + 0.5, _3957);
            _6569 = vec2(_3947 * 0.5, _3957);
        }
        else
        {
            vec2 _6570;
            vec2 _6578;
            if (abs(_3894 - 2.0) < 0.001000000047497451305389404296875)
            {
                float _3985 = _3866 * 0.99609375 + 0.001953125;
                float _3993 = _3851 * 0.315823078155517578125 + 0.00390625;
                _6578 = vec2(_3985 * 0.5, _3993 * 0.25 + 0.75);
                _6570 = vec2(_3985 * 0.5 + 0.5, _3993 * 0.25 + 0.5);
            }
            else
            {
                vec2 _6571;
                vec2 _6579;
                if (abs(_3894 - 3.0) < 0.001000000047497451305389404296875)
                {
                    _6579 = vec2((_3866 * 0.9921875 + 0.00390625) * 0.25 + 0.5, (_3851 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75);
                    _6571 = vec2((_3866 * 0.99609375 + 0.001953125) * 0.5, (_3851 * 0.315823078155517578125 + 0.00390625) * 0.25 + 0.75);
                }
                else
                {
                    vec2 _6572;
                    vec2 _6580;
                    if (abs(_3894 - 4.0) < 0.001000000047497451305389404296875)
                    {
                        float _4061 = _3866 * 0.9921875 + 0.00390625;
                        float _4071 = (_3851 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.75;
                        _6580 = vec2(_4061 * 0.25 + 0.75, _4071);
                        _6572 = vec2(_4061 * 0.25 + 0.5, _4071);
                    }
                    else
                    {
                        vec2 _6573;
                        vec2 _6581;
                        if (abs(_3894 - 5.0) < 0.001000000047497451305389404296875)
                        {
                            float _4099 = _3866 * 0.9921875 + 0.00390625;
                            float _4107 = _3851 * 0.3133362829685211181640625 + 0.0078125;
                            _6581 = vec2(_4099 * 0.25 + 0.5, _4107 * 0.125 + 0.875);
                            _6573 = vec2(_4099 * 0.25 + 0.75, _4107 * 0.125 + 0.75);
                        }
                        else
                        {
                            vec2 _6574;
                            vec2 _6582;
                            if (abs(_3894 - 6.0) < 0.001000000047497451305389404296875)
                            {
                                float _4137 = _3866 * 0.9921875 + 0.00390625;
                                float _4147 = (_3851 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875;
                                _6582 = vec2(_4137 * 0.25 + 0.75, _4147);
                                _6574 = vec2(_4137 * 0.25 + 0.5, _4147);
                            }
                            else
                            {
                                vec2 _6583;
                                if (abs(_3894 - 7.0) < 0.001000000047497451305389404296875)
                                {
                                    _6583 = vec2((_3866 * 0.9921875 + 0.00390625) * 0.25 + 0.75, (_3851 * 0.3133362829685211181640625 + 0.0078125) * 0.125 + 0.875);
                                }
                                else
                                {
                                    _6583 = _6402;
                                }
                                _6582 = _6583;
                                _6574 = _6583;
                            }
                            _6581 = _6582;
                            _6573 = _6574;
                        }
                        _6580 = _6581;
                        _6572 = _6573;
                    }
                    _6579 = _6580;
                    _6571 = _6572;
                }
                _6578 = _6579;
                _6570 = _6571;
            }
            _6577 = _6578;
            _6569 = _6570;
        }
        _6576 = _6577;
        _6568 = _6569;
    }
    vec4 _4219 = mix(texture(_AmbientTexture, _6568), texture(_AmbientTexture, _6576), vec4(_3799 * 7.0 + (-_3894)));
    vec4 _4244 = (vec4(-1.0, -0.0274999998509883880615234375, -0.572000026702880859375, 0.02199999988079071044921875) * _2371) + vec4(1.0, 0.0425000004470348358154296875, 1.03999996185302734375, -0.039999999105930328369140625);
    float _4246 = _4244.x;
    vec2 _4264 = (vec2(-1.03999996185302734375, 1.03999996185302734375) * (min(_4246 * _4246, exp2((-9.27999973297119140625) * _2505)) * _4246 + _4244.y)) + _4244.zw;
    vec3 _3155 = (((((_2402 * _4264.x) + vec3(_4264.y * clamp(50.0 * _2402.y, 0.0, 1.0))) * (_4219.xyz / vec3(_4219.w))) * max(vec3(_2534), ((((((_2402 * 2.040400028228759765625) - vec3(0.3323999941349029541015625)) * _2534) + ((_2402 * (-4.79510021209716796875)) + vec3(0.6417000293731689453125))) * _2534) + ((_2402 * 2.755199909210205078125) + vec3(0.69029998779296875))) * _2534)) * _AmbientIntensity) * 1.0;
    vec3 _6611;
    vec3 _6612;
    if (_2598 > 0.5)
    {
        vec3 _4337 = normalize(_2605 + _6528);
        float _4343 = max(0.0, dot(_2100, _2605));
        float _4354 = max(0.0, dot(_6528, _4337));
        float _4370 = (-_2505) * _4343 + ((2.0 * _4354) * _4354 + (-1.0));
        float _6600;
        if (_4370 >= 0.0)
        {
            _6600 = 1.0 / max(_4343, _2505);
        }
        else
        {
            _6600 = 1.0;
        }
        float _4448 = max(0.0, dot(_2100, _4337));
        float _4506 = 1.0 - _4343;
        float _4534 = (_4448 * _2482 + (-_4448)) * _4448 + 1.0;
        float _4547 = 1.0 - _4354;
        float _4561 = _4547 * _4547;
        _6612 = _3155 + ((((((((_2402 + ((vec3(1.0) - _2402) * ((_4561 * _4561) * _4547))) * (0.5 / ((_2477 * (_2505 * _4506 + _4343) + (_2505 * (_2477 * _4506 + _4343))) + 9.9999997473787516355514526367188e-06))) * ((_2482 * 0.31830990314483642578125) / (_4534 * _4534 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4343) * u_DirLightsColor[0].xyz) * _2617) * 1.0);
        _6611 = _3148 + ((((_2395 * u_DirLightsColor[0].xyz) * _2617) * ((((((0.449999988079071044921875 * _2482) / (_2477 * _2477 + 0.0900000035762786865234375)) * _4370) * _6600 + (1.0 - ((0.5 * _2482) / (_2477 * _2477 + 0.3300000131130218505859375)))) * (_2371 * 0.5 + 1.0)) * _4343)) * 1.0);
    }
    else
    {
        _6612 = _3155;
        _6611 = _3148;
    }
    vec3 _6613;
    vec3 _6614;
    if (_2632 > 0.5)
    {
        float _4576 = max(0.0, dot(_2100, _2639));
        vec3 _4612 = normalize(_2639 + _6528);
        float _4617 = max(0.0, dot(_2100, _4612));
        float _4671 = (_4617 * _2482 + (-_4617)) * _4617 + 1.0;
        float _4684 = 1.0 - max(0.0, dot(_6528, _4612));
        float _4698 = _4684 * _4684;
        _6614 = _6612 + ((((((((_2402 + ((vec3(1.0) - _2402) * ((_4698 * _4698) * _4684))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_4671 * _4671 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4576) * u_DirLightsColor[1].xyz) * _2651) * 1.0);
        _6613 = _6611 + ((((_2395 * u_DirLightsColor[1].xyz) * _2651) * _4576) * 1.0);
    }
    else
    {
        _6614 = _6612;
        _6613 = _6611;
    }
    vec3 _6615;
    vec3 _6616;
    if (_2666 > 0.5)
    {
        float _4713 = max(0.0, dot(_2100, _2673));
        vec3 _4749 = normalize(_2673 + _6528);
        float _4754 = max(0.0, dot(_2100, _4749));
        float _4808 = (_4754 * _2482 + (-_4754)) * _4754 + 1.0;
        float _4821 = 1.0 - max(0.0, dot(_6528, _4749));
        float _4835 = _4821 * _4821;
        _6616 = _6614 + ((((((((_2402 + ((vec3(1.0) - _2402) * ((_4835 * _4835) * _4821))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_4808 * _4808 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4713) * u_DirLightsColor[2].xyz) * _2685) * 1.0);
        _6615 = _6613 + ((((_2395 * u_DirLightsColor[2].xyz) * _2685) * _4713) * 1.0);
    }
    else
    {
        _6616 = _6614;
        _6615 = _6613;
    }
    vec3 _6617;
    vec3 _6618;
    if (_2707 > 0.5)
    {
        float _4850 = max(0.0, dot(_2100, _2721));
        vec3 _4886 = normalize(_2721 + _6528);
        float _4891 = max(0.0, dot(_2100, _4886));
        float _4945 = (_4891 * _2482 + (-_4891)) * _4891 + 1.0;
        float _4958 = 1.0 - max(0.0, dot(_6528, _4886));
        float _4972 = _4958 * _4958;
        _6618 = _6616 + (((((((((_2402 + ((vec3(1.0) - _2402) * ((_4972 * _4972) * _4958))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_4945 * _4945 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4850) * u_PointLightsColor[0].xyz) * _2733) * _2753) * 1.0);
        _6617 = _6615 + (((((_2395 * u_PointLightsColor[0].xyz) * _2733) * _2753) * _4850) * 1.0);
    }
    else
    {
        _6618 = _6616;
        _6617 = _6615;
    }
    vec3 _6619;
    vec3 _6620;
    if (_2797 > 0.5)
    {
        float _4987 = max(0.0, dot(_2100, _2811));
        vec3 _5023 = normalize(_2811 + _6528);
        float _5028 = max(0.0, dot(_2100, _5023));
        float _5082 = (_5028 * _2482 + (-_5028)) * _5028 + 1.0;
        float _5095 = 1.0 - max(0.0, dot(_6528, _5023));
        float _5109 = _5095 * _5095;
        _6620 = _6618 + (((((((((_2402 + ((vec3(1.0) - _2402) * ((_5109 * _5109) * _5095))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_5082 * _5082 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _4987) * u_PointLightsColor[1].xyz) * _2823) * _2843) * 1.0);
        _6619 = _6617 + (((((_2395 * u_PointLightsColor[1].xyz) * _2823) * _2843) * _4987) * 1.0);
    }
    else
    {
        _6620 = _6618;
        _6619 = _6617;
    }
    vec3 _6621;
    vec3 _6622;
    if (_2889 > 0.5)
    {
        float _5124 = max(0.0, dot(_2100, _2903));
        vec3 _5160 = normalize(_2903 + _6528);
        float _5165 = max(0.0, dot(_2100, _5160));
        float _5219 = (_5165 * _2482 + (-_5165)) * _5165 + 1.0;
        float _5232 = 1.0 - max(0.0, dot(_6528, _5160));
        float _5246 = _5232 * _5232;
        _6622 = _6620 + (((((((((_2402 + ((vec3(1.0) - _2402) * ((_5246 * _5246) * _5232))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_5219 * _5219 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5124) * u_SpotLightsColor[0].xyz) * _2915) * _2956) * 1.0);
        _6621 = _6619 + (((((_2395 * u_SpotLightsColor[0].xyz) * _2915) * _2956) * _5124) * 1.0);
    }
    else
    {
        _6622 = _6620;
        _6621 = _6619;
    }
    vec3 _6623;
    vec3 _6624;
    if (_3002 > 0.5)
    {
        float _5261 = max(0.0, dot(_2100, _3016));
        vec3 _5297 = normalize(_3016 + _6528);
        float _5302 = max(0.0, dot(_2100, _5297));
        float _5356 = (_5302 * _2482 + (-_5302)) * _5302 + 1.0;
        float _5369 = 1.0 - max(0.0, dot(_6528, _5297));
        float _5383 = _5369 * _5369;
        _6624 = _6622 + (((((((((_2402 + ((vec3(1.0) - _2402) * ((_5383 * _5383) * _5369))) * 0.25) * ((_2482 * 0.31830990314483642578125) / (_5356 * _5356 + 1.0000000116860974230803549289703e-07))) * 3.1415927410125732421875) * _5261) * u_SpotLightsColor[1].xyz) * _3028) * _3069) * 1.0);
        _6623 = _6621 + (((((_2395 * u_SpotLightsColor[1].xyz) * _3028) * _3069) * _5261) * 1.0);
    }
    else
    {
        _6624 = _6622;
        _6623 = _6621;
    }
    vec3 _3307 = _6623 + _6624;
    glResult = vec4(pow(_3307.x, 0.4545449912548065185546875), pow(_3307.y, 0.4545449912548065185546875), pow(_3307.z, 0.4545449912548065185546875), _AlbedoColor.w * _2076.w);
}

